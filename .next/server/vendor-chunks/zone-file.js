"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/zone-file";
exports.ids = ["vendor-chunks/zone-file"];
exports.modules = {

/***/ "(ssr)/./node_modules/zone-file/dist/index.js":
/*!**********************************************!*\
  !*** ./node_modules/zone-file/dist/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./zone-file.cjs.development.js */ \"(ssr)/./node_modules/zone-file/dist/zone-file.cjs.development.js\")\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvem9uZS1maWxlL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IjtBQUNZOztBQUVaLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4SUFBMEQ7QUFDNUQiLCJzb3VyY2VzIjpbIi9Vc2Vycy9laWQvRG9jdW1lbnRzL1FCbG9jay9hYi9ub2RlX21vZHVsZXMvem9uZS1maWxlL2Rpc3QvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXG4ndXNlIHN0cmljdCdcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL3pvbmUtZmlsZS5janMucHJvZHVjdGlvbi5taW4uanMnKVxufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL3pvbmUtZmlsZS5janMuZGV2ZWxvcG1lbnQuanMnKVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/zone-file/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/zone-file/dist/zone-file.cjs.development.js":
/*!******************************************************************!*\
  !*** ./node_modules/zone-file/dist/zone-file.cjs.development.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction getZoneFileTemplate() {\n  return '{$origin}\\n\\\n{$ttl}\\n\\\n\\n\\\n; SOA Record\\n\\\n{name} {ttl}    IN  SOA {mname}{rname}(\\n\\\n{serial} ;serial\\n\\\n{refresh} ;refresh\\n\\\n{retry} ;retry\\n\\\n{expire} ;expire\\n\\\n{minimum} ;minimum ttl\\n\\\n)\\n\\\n\\n\\\n; NS Records\\n\\\n{ns}\\n\\\n\\n\\\n; MX Records\\n\\\n{mx}\\n\\\n\\n\\\n; A Records\\n\\\n{a}\\n\\\n\\n\\\n; AAAA Records\\n\\\n{aaaa}\\n\\\n\\n\\\n; CNAME Records\\n\\\n{cname}\\n\\\n\\n\\\n; PTR Records\\n\\\n{ptr}\\n\\\n\\n\\\n; TXT Records\\n\\\n{txt}\\n\\\n\\n\\\n; SRV Records\\n\\\n{srv}\\n\\\n\\n\\\n; SPF Records\\n\\\n{spf}\\n\\\n\\n\\\n; URI Records\\n\\\n{uri}\\n\\\n';\n}\n\nfunction makeZoneFile(jsonZoneFile, template) {\n  if (template === void 0) {\n    template = getZoneFileTemplate();\n  }\n\n  template = processOrigin(jsonZoneFile['$origin'], template);\n  template = processTTL(jsonZoneFile['$ttl'], template);\n  template = processSOA(jsonZoneFile['soa'], template);\n  template = processNS(jsonZoneFile['ns'], template);\n  template = processA(jsonZoneFile['a'], template);\n  template = processAAAA(jsonZoneFile['aaaa'], template);\n  template = processCNAME(jsonZoneFile['cname'], template);\n  template = processMX(jsonZoneFile['mx'], template);\n  template = processPTR(jsonZoneFile['ptr'], template);\n  template = processTXT(jsonZoneFile['txt'], template);\n  template = processSRV(jsonZoneFile['srv'], template);\n  template = processSPF(jsonZoneFile['spf'], template);\n  template = processURI(jsonZoneFile['uri'], template);\n  template = processValues(jsonZoneFile, template);\n  return template.replace(/\\n{2,}/gim, '\\n\\n');\n}\n\nfunction processOrigin(data, template) {\n  var ret = '';\n\n  if (typeof data !== 'undefined') {\n    ret += '$ORIGIN ' + data;\n  }\n\n  return template.replace('{$origin}', ret);\n}\n\nfunction processTTL(data, template) {\n  var ret = '';\n\n  if (typeof data !== 'undefined') {\n    ret += '$TTL ' + data;\n  }\n\n  return template.replace('{$ttl}', ret);\n}\n\nfunction processSOA(data, template) {\n  var ret = template;\n\n  if (typeof data !== 'undefined') {\n    data.name = data.name || '@';\n    data.ttl = data.ttl || '';\n\n    for (var key in data) {\n      var value = data[key];\n      ret = ret.replace('{' + key + '}', value + '\\t');\n    }\n  }\n\n  return ret;\n}\n\nfunction processNS(data, template) {\n  var ret = '';\n\n  if (data) {\n    for (var _iterator = _createForOfIteratorHelperLoose(data), _step; !(_step = _iterator()).done;) {\n      var record = _step.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tNS\\t' + record.host + '\\n';\n    }\n  }\n\n  return template.replace('{ns}', ret);\n}\n\nfunction processA(data, template) {\n  var ret = '';\n\n  if (data) {\n    for (var _iterator2 = _createForOfIteratorHelperLoose(data), _step2; !(_step2 = _iterator2()).done;) {\n      var record = _step2.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tA\\t' + record.ip + '\\n';\n    }\n  }\n\n  return template.replace('{a}', ret);\n}\n\nfunction processAAAA(data, template) {\n  var ret = '';\n\n  if (data) {\n    for (var _iterator3 = _createForOfIteratorHelperLoose(data), _step3; !(_step3 = _iterator3()).done;) {\n      var record = _step3.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tAAAA\\t' + record.ip + '\\n';\n    }\n  }\n\n  return template.replace('{aaaa}', ret);\n}\n\nfunction processCNAME(data, template) {\n  var ret = '';\n\n  if (data) {\n    for (var _iterator4 = _createForOfIteratorHelperLoose(data), _step4; !(_step4 = _iterator4()).done;) {\n      var record = _step4.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tCNAME\\t' + record.alias + '\\n';\n    }\n  }\n\n  return template.replace('{cname}', ret);\n}\n\nfunction processMX(data, template) {\n  var ret = '';\n\n  if (data) {\n    for (var _iterator5 = _createForOfIteratorHelperLoose(data), _step5; !(_step5 = _iterator5()).done;) {\n      var record = _step5.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tMX\\t' + record.preference + '\\t' + record.host + '\\n';\n    }\n  }\n\n  return template.replace('{mx}', ret);\n}\n\nfunction processPTR(data, template) {\n  var ret = '';\n\n  if (data) {\n    for (var _iterator6 = _createForOfIteratorHelperLoose(data), _step6; !(_step6 = _iterator6()).done;) {\n      var record = _step6.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tPTR\\t' + record.host + '\\n';\n    }\n  }\n\n  return template.replace('{ptr}', ret);\n}\n\nfunction processTXT(data, template) {\n  var ret = '';\n\n  if (data) {\n    for (var _iterator7 = _createForOfIteratorHelperLoose(data), _step7; !(_step7 = _iterator7()).done;) {\n      var record = _step7.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tTXT\\t';\n      var txtData = record.txt;\n\n      if (typeof txtData === 'string') {\n        ret += '\"' + txtData + '\"';\n      } else if (txtData instanceof Array) {\n        ret += txtData.map(function (datum) {\n          return '\"' + datum + '\"';\n        }).join(' ');\n      }\n\n      ret += '\\n';\n    }\n  }\n\n  return template.replace('{txt}', ret);\n}\n\nfunction processSRV(data, template) {\n  var ret = '';\n\n  if (data) {\n    for (var _iterator8 = _createForOfIteratorHelperLoose(data), _step8; !(_step8 = _iterator8()).done;) {\n      var record = _step8.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tSRV\\t' + record.priority + '\\t';\n      ret += record.weight + '\\t';\n      ret += record.port + '\\t';\n      ret += record.target + '\\n';\n    }\n  }\n\n  return template.replace('{srv}', ret);\n}\n\nfunction processSPF(data, template) {\n  var ret = '';\n\n  if (data) {\n    for (var _iterator9 = _createForOfIteratorHelperLoose(data), _step9; !(_step9 = _iterator9()).done;) {\n      var record = _step9.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tSPF\\t' + record.data + '\\n';\n    }\n  }\n\n  return template.replace('{spf}', ret);\n}\n\nfunction processURI(data, template) {\n  var ret = '';\n\n  if (data) {\n    for (var _iterator10 = _createForOfIteratorHelperLoose(data), _step10; !(_step10 = _iterator10()).done;) {\n      var record = _step10.value;\n      ret += (record.name || '@') + '\\t';\n      if (record.ttl) ret += record.ttl + '\\t';\n      ret += 'IN\\tURI\\t' + record.priority + '\\t';\n      ret += record.weight + '\\t';\n      ret += '\"' + record.target + '\"\\n';\n    }\n  }\n\n  return template.replace('{uri}', ret);\n}\n\nfunction processValues(jsonZoneFile, template) {\n  template = template.replace('{zone}', jsonZoneFile['$origin'] || (jsonZoneFile['soa'] ? jsonZoneFile['soa']['name'] : false) || '');\n  template = template.replace('{datetime}', new Date().toISOString());\n  var time = Math.round(Date.now() / 1000);\n  return template.replace('{time}', \"\" + time);\n}\n\nfunction parseZoneFile(text) {\n  text = removeComments(text);\n  text = flatten(text);\n  return parseRRs(text);\n}\n\nfunction removeComments(text) {\n  var re = /(^|[^\\\\]);.*/g;\n  return text.replace(re, function (_m, g1) {\n    return g1 ? g1 : ''; // if g1 is set/matched, re-insert it, else remove\n  });\n}\n\nfunction flatten(text) {\n  var captured = [];\n  var re = /\\([\\s\\S]*?\\)/gim;\n  var match = re.exec(text);\n\n  while (match !== null) {\n    var replacement = match[0].replace(/\\s+/gm, ' ');\n    captured.push({\n      match: match,\n      replacement: replacement\n    }); // captured Text, index, input\n\n    match = re.exec(text);\n  }\n\n  var arrText = text.split('');\n\n  for (var _i = 0, _captured = captured; _i < _captured.length; _i++) {\n    var cur = _captured[_i];\n    var _match = cur.match,\n        _replacement = cur.replacement;\n    arrText.splice(_match.index, _match[0].length, _replacement);\n  }\n\n  return arrText.join('').replace(/\\(|\\)/gim, ' ');\n}\n\nfunction parseRRs(text) {\n  var ret = {};\n  var rrs = text.split('\\n');\n\n  for (var _iterator = _createForOfIteratorHelperLoose(rrs), _step; !(_step = _iterator()).done;) {\n    var rr = _step.value;\n\n    if (!rr || !rr.trim()) {\n      continue;\n    }\n\n    var uRR = rr.toUpperCase();\n\n    if (/\\s+TXT\\s+/.test(uRR)) {\n      ret.txt = ret.txt || [];\n      ret.txt.push(parseTXT(rr));\n    } else if (uRR.indexOf('$ORIGIN') === 0) {\n      ret.$origin = rr.split(/\\s+/g)[1];\n    } else if (uRR.indexOf('$TTL') === 0) {\n      ret.$ttl = parseInt(rr.split(/\\s+/g)[1], 10);\n    } else if (/\\s+SOA\\s+/.test(uRR)) {\n      ret.soa = parseSOA(rr);\n    } else if (/\\s+NS\\s+/.test(uRR)) {\n      ret.ns = ret.ns || [];\n      ret.ns.push(parseNS(rr));\n    } else if (/\\s+A\\s+/.test(uRR)) {\n      ret.a = ret.a || [];\n      ret.a.push(parseA(rr, ret.a));\n    } else if (/\\s+AAAA\\s+/.test(uRR)) {\n      ret.aaaa = ret.aaaa || [];\n      ret.aaaa.push(parseAAAA(rr));\n    } else if (/\\s+CNAME\\s+/.test(uRR)) {\n      ret.cname = ret.cname || [];\n      ret.cname.push(parseCNAME(rr));\n    } else if (/\\s+MX\\s+/.test(uRR)) {\n      ret.mx = ret.mx || [];\n      ret.mx.push(parseMX(rr));\n    } else if (/\\s+PTR\\s+/.test(uRR)) {\n      ret.ptr = ret.ptr || [];\n      ret.ptr.push(parsePTR(rr, ret.ptr, ret.$origin));\n    } else if (/\\s+SRV\\s+/.test(uRR)) {\n      ret.srv = ret.srv || [];\n      ret.srv.push(parseSRV(rr));\n    } else if (/\\s+SPF\\s+/.test(uRR)) {\n      ret.spf = ret.spf || [];\n      ret.spf.push(parseSPF(rr));\n    } else if (/\\s+URI\\s+/.test(uRR)) {\n      ret.uri = ret.uri || [];\n      ret.uri.push(parseURI(rr));\n    }\n  }\n\n  return ret;\n}\n\nfunction parseSOA(rr) {\n  var soa = {};\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var l = rrTokens.length;\n  soa.name = rrTokens[0];\n  soa.minimum = parseInt(rrTokens[l - 1], 10);\n  soa.expire = parseInt(rrTokens[l - 2], 10);\n  soa.retry = parseInt(rrTokens[l - 3], 10);\n  soa.refresh = parseInt(rrTokens[l - 4], 10);\n  soa.serial = parseInt(rrTokens[l - 5], 10);\n  soa.rname = rrTokens[l - 6];\n  soa.mname = rrTokens[l - 7];\n  if (!isNaN(rrTokens[1])) soa.ttl = parseInt(rrTokens[1], 10);\n  return soa;\n}\n\nfunction parseNS(rr) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    host: rrTokens[l - 1]\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseA(rr, recordsSoFar) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var urrTokens = rr.trim().toUpperCase().split(/\\s+/g);\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    ip: rrTokens[l - 1]\n  };\n\n  if (urrTokens.lastIndexOf('A') === 0) {\n    if (recordsSoFar.length) {\n      result.name = recordsSoFar[recordsSoFar.length - 1].name;\n    } else {\n      result.name = '@';\n    }\n  }\n\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseAAAA(rr) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    ip: rrTokens[l - 1]\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseCNAME(rr) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    alias: rrTokens[l - 1]\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseMX(rr) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    preference: parseInt(rrTokens[l - 2], 10),\n    host: rrTokens[l - 1]\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseTXT(rr) {\n  var rrTokens = rr.trim().match(/[^\\s\"']+|\"[^\"]*\"|'[^']*'/g);\n  if (!rrTokens) throw new Error('Failure to tokenize TXT record');\n  var l = rrTokens.length;\n  var indexTXT = rrTokens.indexOf('TXT');\n\n  function stripText(txt) {\n    if (txt.indexOf('\"') > -1) {\n      txt = txt.split('\"')[1];\n    }\n\n    return txt;\n  }\n\n  var tokenTxt;\n\n  if (l - indexTXT - 1 > 1) {\n    tokenTxt = [].concat(rrTokens.slice(indexTXT + 1).map(stripText));\n  } else {\n    tokenTxt = stripText(rrTokens[l - 1]);\n  }\n\n  var result = {\n    name: rrTokens[0],\n    txt: tokenTxt\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parsePTR(rr, recordsSoFar, currentOrigin) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var urrTokens = rr.trim().toUpperCase().split(/\\s+/g);\n\n  if (urrTokens.lastIndexOf('PTR') === 0 && recordsSoFar[recordsSoFar.length - 1]) {\n    rrTokens.unshift(recordsSoFar[recordsSoFar.length - 1].name);\n  }\n\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    fullname: rrTokens[0] + '.' + currentOrigin,\n    host: rrTokens[l - 1]\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseSRV(rr) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    target: rrTokens[l - 1],\n    priority: parseInt(rrTokens[l - 4], 10),\n    weight: parseInt(rrTokens[l - 3], 10),\n    port: parseInt(rrTokens[l - 2], 10)\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseSPF(rr) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var result = {\n    name: rrTokens[0],\n    data: ''\n  };\n  var l = rrTokens.length;\n\n  while (l-- > 4) {\n    result.data = rrTokens[l] + ' ' + result.data.trim();\n  }\n\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nfunction parseURI(rr) {\n  var rrTokens = rr.trim().split(/\\s+/g);\n  var l = rrTokens.length;\n  var result = {\n    name: rrTokens[0],\n    target: rrTokens[l - 1].replace(/\"/g, ''),\n    priority: parseInt(rrTokens[l - 3], 10),\n    weight: parseInt(rrTokens[l - 2], 10)\n  };\n  if (!isNaN(rrTokens[1])) result.ttl = parseInt(rrTokens[1], 10);\n  return result;\n}\n\nvar ZoneFile = /*#__PURE__*/function () {\n  function ZoneFile(zoneFile) {\n    if (typeof zoneFile === 'object') {\n      this.jsonZoneFile = JSON.parse(JSON.stringify(zoneFile));\n    } else if (typeof zoneFile === 'string') {\n      this.jsonZoneFile = parseZoneFile(zoneFile);\n    } else {\n      this.jsonZoneFile = undefined;\n    }\n  }\n\n  var _proto = ZoneFile.prototype;\n\n  _proto.toJSON = function toJSON() {\n    return this.jsonZoneFile;\n  };\n\n  _proto.toString = function toString() {\n    return makeZoneFile(this.toJSON());\n  };\n\n  return ZoneFile;\n}();\n\nexports.ZoneFile = ZoneFile;\nexports.makeZoneFile = makeZoneFile;\nexports.parseZoneFile = parseZoneFile;\n//# sourceMappingURL=zone-file.cjs.development.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/zone-file/dist/zone-file.cjs.development.js\n");

/***/ })

};
;