"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/jsontokens";
exports.ids = ["vendor-chunks/jsontokens"];
exports.modules = {

/***/ "(ssr)/./node_modules/jsontokens/lib/base64Url.js":
/*!**************************************************!*\
  !*** ./node_modules/jsontokens/lib/base64Url.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decode = exports.encode = exports.unescape = exports.escape = exports.pad = void 0;\nconst base64_js_1 = __webpack_require__(/*! base64-js */ \"(ssr)/./node_modules/base64-js/index.js\");\nfunction pad(base64) {\n    return `${base64}${'='.repeat(4 - (base64.length % 4 || 4))}`;\n}\nexports.pad = pad;\nfunction escape(base64) {\n    return base64.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nexports.escape = escape;\nfunction unescape(base64Url) {\n    return pad(base64Url).replace(/-/g, '+').replace(/_/g, '/');\n}\nexports.unescape = unescape;\nfunction encode(base64) {\n    return escape((0, base64_js_1.fromByteArray)(new TextEncoder().encode(base64)));\n}\nexports.encode = encode;\nfunction decode(base64Url) {\n    return new TextDecoder().decode((0, base64_js_1.toByteArray)(pad(unescape(base64Url))));\n}\nexports.decode = decode;\n//# sourceMappingURL=base64Url.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvYmFzZTY0VXJsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWMsR0FBRyxjQUFjLEdBQUcsZ0JBQWdCLEdBQUcsY0FBYyxHQUFHLFdBQVc7QUFDakYsb0JBQW9CLG1CQUFPLENBQUMsMERBQVc7QUFDdkM7QUFDQSxjQUFjLE9BQU8sRUFBRSx5Q0FBeUM7QUFDaEU7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkIiwic291cmNlcyI6WyIvVXNlcnMvZWlkL0RvY3VtZW50cy9RQmxvY2svYWIvbm9kZV9tb2R1bGVzL2pzb250b2tlbnMvbGliL2Jhc2U2NFVybC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVjb2RlID0gZXhwb3J0cy5lbmNvZGUgPSBleHBvcnRzLnVuZXNjYXBlID0gZXhwb3J0cy5lc2NhcGUgPSBleHBvcnRzLnBhZCA9IHZvaWQgMDtcbmNvbnN0IGJhc2U2NF9qc18xID0gcmVxdWlyZShcImJhc2U2NC1qc1wiKTtcbmZ1bmN0aW9uIHBhZChiYXNlNjQpIHtcbiAgICByZXR1cm4gYCR7YmFzZTY0fSR7Jz0nLnJlcGVhdCg0IC0gKGJhc2U2NC5sZW5ndGggJSA0IHx8IDQpKX1gO1xufVxuZXhwb3J0cy5wYWQgPSBwYWQ7XG5mdW5jdGlvbiBlc2NhcGUoYmFzZTY0KSB7XG4gICAgcmV0dXJuIGJhc2U2NC5yZXBsYWNlKC89L2csICcnKS5yZXBsYWNlKC9cXCsvZywgJy0nKS5yZXBsYWNlKC9cXC8vZywgJ18nKTtcbn1cbmV4cG9ydHMuZXNjYXBlID0gZXNjYXBlO1xuZnVuY3Rpb24gdW5lc2NhcGUoYmFzZTY0VXJsKSB7XG4gICAgcmV0dXJuIHBhZChiYXNlNjRVcmwpLnJlcGxhY2UoLy0vZywgJysnKS5yZXBsYWNlKC9fL2csICcvJyk7XG59XG5leHBvcnRzLnVuZXNjYXBlID0gdW5lc2NhcGU7XG5mdW5jdGlvbiBlbmNvZGUoYmFzZTY0KSB7XG4gICAgcmV0dXJuIGVzY2FwZSgoMCwgYmFzZTY0X2pzXzEuZnJvbUJ5dGVBcnJheSkobmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKGJhc2U2NCkpKTtcbn1cbmV4cG9ydHMuZW5jb2RlID0gZW5jb2RlO1xuZnVuY3Rpb24gZGVjb2RlKGJhc2U2NFVybCkge1xuICAgIHJldHVybiBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoKDAsIGJhc2U2NF9qc18xLnRvQnl0ZUFycmF5KShwYWQodW5lc2NhcGUoYmFzZTY0VXJsKSkpKTtcbn1cbmV4cG9ydHMuZGVjb2RlID0gZGVjb2RlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzZTY0VXJsLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/base64Url.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/cryptoClients/index.js":
/*!************************************************************!*\
  !*** ./node_modules/jsontokens/lib/cryptoClients/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.cryptoClients = exports.SECP256K1Client = void 0;\nconst secp256k1_1 = __webpack_require__(/*! ./secp256k1 */ \"(ssr)/./node_modules/jsontokens/lib/cryptoClients/secp256k1.js\");\nObject.defineProperty(exports, \"SECP256K1Client\", ({ enumerable: true, get: function () { return secp256k1_1.SECP256K1Client; } }));\nconst cryptoClients = {\n    ES256K: secp256k1_1.SECP256K1Client,\n};\nexports.cryptoClients = cryptoClients;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvY3J5cHRvQ2xpZW50cy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUIsR0FBRyx1QkFBdUI7QUFDL0Msb0JBQW9CLG1CQUFPLENBQUMsbUZBQWE7QUFDekMsbURBQWtELEVBQUUscUNBQXFDLHVDQUF1QyxFQUFDO0FBQ2pJO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQiIsInNvdXJjZXMiOlsiL1VzZXJzL2VpZC9Eb2N1bWVudHMvUUJsb2NrL2FiL25vZGVfbW9kdWxlcy9qc29udG9rZW5zL2xpYi9jcnlwdG9DbGllbnRzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcnlwdG9DbGllbnRzID0gZXhwb3J0cy5TRUNQMjU2SzFDbGllbnQgPSB2b2lkIDA7XG5jb25zdCBzZWNwMjU2azFfMSA9IHJlcXVpcmUoXCIuL3NlY3AyNTZrMVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlNFQ1AyNTZLMUNsaWVudFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc2VjcDI1NmsxXzEuU0VDUDI1NksxQ2xpZW50OyB9IH0pO1xuY29uc3QgY3J5cHRvQ2xpZW50cyA9IHtcbiAgICBFUzI1Nks6IHNlY3AyNTZrMV8xLlNFQ1AyNTZLMUNsaWVudCxcbn07XG5leHBvcnRzLmNyeXB0b0NsaWVudHMgPSBjcnlwdG9DbGllbnRzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/cryptoClients/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/cryptoClients/secp256k1.js":
/*!****************************************************************!*\
  !*** ./node_modules/jsontokens/lib/cryptoClients/secp256k1.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SECP256K1Client = void 0;\nconst hmac_1 = __webpack_require__(/*! @noble/hashes/hmac */ \"(ssr)/./node_modules/@noble/hashes/hmac.js\");\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/sha256.js\");\nconst secp = __webpack_require__(/*! @noble/secp256k1 */ \"(ssr)/./node_modules/@noble/secp256k1/lib/index.js\");\nconst ecdsaSigFormatter_1 = __webpack_require__(/*! ../ecdsaSigFormatter */ \"(ssr)/./node_modules/jsontokens/lib/ecdsaSigFormatter.js\");\nconst errors_1 = __webpack_require__(/*! ../errors */ \"(ssr)/./node_modules/jsontokens/lib/errors.js\");\nconst utils_1 = __webpack_require__(/*! @noble/hashes/utils */ \"(ssr)/./node_modules/@noble/hashes/utils.js\");\n// required to use noble secp https://github.com/paulmillr/noble-secp256k1\nsecp.utils.hmacSha256Sync = (key, ...msgs) => {\n    const h = hmac_1.hmac.create(sha256_1.sha256, key);\n    msgs.forEach(msg => h.update(msg));\n    return h.digest();\n};\nclass SECP256K1Client {\n    static derivePublicKey(privateKey, compressed = true) {\n        if (privateKey.length === 66) {\n            privateKey = privateKey.slice(0, 64);\n        }\n        if (privateKey.length < 64) {\n            // backward compatibly accept too short private keys\n            privateKey = privateKey.padStart(64, '0');\n        }\n        return (0, utils_1.bytesToHex)(secp.getPublicKey(privateKey, compressed));\n    }\n    static signHash(signingInputHash, privateKey, format = 'jose') {\n        // make sure the required parameters are provided\n        if (!signingInputHash || !privateKey) {\n            throw new errors_1.MissingParametersError('a signing input hash and private key are all required');\n        }\n        const derSignature = secp.signSync(signingInputHash, privateKey.slice(0, 64), {\n            der: true,\n            canonical: false,\n        });\n        if (format === 'der')\n            return (0, utils_1.bytesToHex)(derSignature);\n        if (format === 'jose')\n            return (0, ecdsaSigFormatter_1.derToJose)(derSignature, 'ES256');\n        throw Error('Invalid signature format');\n    }\n    static loadSignature(joseSignature) {\n        // create and return the DER-formatted signature bytes\n        return (0, ecdsaSigFormatter_1.joseToDer)(joseSignature, 'ES256');\n    }\n    static verifyHash(signingInputHash, derSignatureBytes, publicKey) {\n        // make sure the required parameters are provided\n        if (!signingInputHash || !derSignatureBytes || !publicKey) {\n            throw new errors_1.MissingParametersError('a signing input hash, der signature, and public key are all required');\n        }\n        return secp.verify(derSignatureBytes, signingInputHash, publicKey, { strict: false });\n    }\n}\nexports.SECP256K1Client = SECP256K1Client;\nSECP256K1Client.algorithmName = 'ES256K';\n//# sourceMappingURL=secp256k1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvY3J5cHRvQ2xpZW50cy9zZWNwMjU2azEuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLGVBQWUsbUJBQU8sQ0FBQyxzRUFBb0I7QUFDM0MsaUJBQWlCLG1CQUFPLENBQUMsMEVBQXNCO0FBQy9DLGFBQWEsbUJBQU8sQ0FBQyw0RUFBa0I7QUFDdkMsNEJBQTRCLG1CQUFPLENBQUMsc0ZBQXNCO0FBQzFELGlCQUFpQixtQkFBTyxDQUFDLGdFQUFXO0FBQ3BDLGdCQUFnQixtQkFBTyxDQUFDLHdFQUFxQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RUFBNkUsZUFBZTtBQUM1RjtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9laWQvRG9jdW1lbnRzL1FCbG9jay9hYi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvY3J5cHRvQ2xpZW50cy9zZWNwMjU2azEuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNFQ1AyNTZLMUNsaWVudCA9IHZvaWQgMDtcbmNvbnN0IGhtYWNfMSA9IHJlcXVpcmUoXCJAbm9ibGUvaGFzaGVzL2htYWNcIik7XG5jb25zdCBzaGEyNTZfMSA9IHJlcXVpcmUoXCJAbm9ibGUvaGFzaGVzL3NoYTI1NlwiKTtcbmNvbnN0IHNlY3AgPSByZXF1aXJlKFwiQG5vYmxlL3NlY3AyNTZrMVwiKTtcbmNvbnN0IGVjZHNhU2lnRm9ybWF0dGVyXzEgPSByZXF1aXJlKFwiLi4vZWNkc2FTaWdGb3JtYXR0ZXJcIik7XG5jb25zdCBlcnJvcnNfMSA9IHJlcXVpcmUoXCIuLi9lcnJvcnNcIik7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkBub2JsZS9oYXNoZXMvdXRpbHNcIik7XG4vLyByZXF1aXJlZCB0byB1c2Ugbm9ibGUgc2VjcCBodHRwczovL2dpdGh1Yi5jb20vcGF1bG1pbGxyL25vYmxlLXNlY3AyNTZrMVxuc2VjcC51dGlscy5obWFjU2hhMjU2U3luYyA9IChrZXksIC4uLm1zZ3MpID0+IHtcbiAgICBjb25zdCBoID0gaG1hY18xLmhtYWMuY3JlYXRlKHNoYTI1Nl8xLnNoYTI1Niwga2V5KTtcbiAgICBtc2dzLmZvckVhY2gobXNnID0+IGgudXBkYXRlKG1zZykpO1xuICAgIHJldHVybiBoLmRpZ2VzdCgpO1xufTtcbmNsYXNzIFNFQ1AyNTZLMUNsaWVudCB7XG4gICAgc3RhdGljIGRlcml2ZVB1YmxpY0tleShwcml2YXRlS2V5LCBjb21wcmVzc2VkID0gdHJ1ZSkge1xuICAgICAgICBpZiAocHJpdmF0ZUtleS5sZW5ndGggPT09IDY2KSB7XG4gICAgICAgICAgICBwcml2YXRlS2V5ID0gcHJpdmF0ZUtleS5zbGljZSgwLCA2NCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByaXZhdGVLZXkubGVuZ3RoIDwgNjQpIHtcbiAgICAgICAgICAgIC8vIGJhY2t3YXJkIGNvbXBhdGlibHkgYWNjZXB0IHRvbyBzaG9ydCBwcml2YXRlIGtleXNcbiAgICAgICAgICAgIHByaXZhdGVLZXkgPSBwcml2YXRlS2V5LnBhZFN0YXJ0KDY0LCAnMCcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoMCwgdXRpbHNfMS5ieXRlc1RvSGV4KShzZWNwLmdldFB1YmxpY0tleShwcml2YXRlS2V5LCBjb21wcmVzc2VkKSk7XG4gICAgfVxuICAgIHN0YXRpYyBzaWduSGFzaChzaWduaW5nSW5wdXRIYXNoLCBwcml2YXRlS2V5LCBmb3JtYXQgPSAnam9zZScpIHtcbiAgICAgICAgLy8gbWFrZSBzdXJlIHRoZSByZXF1aXJlZCBwYXJhbWV0ZXJzIGFyZSBwcm92aWRlZFxuICAgICAgICBpZiAoIXNpZ25pbmdJbnB1dEhhc2ggfHwgIXByaXZhdGVLZXkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfMS5NaXNzaW5nUGFyYW1ldGVyc0Vycm9yKCdhIHNpZ25pbmcgaW5wdXQgaGFzaCBhbmQgcHJpdmF0ZSBrZXkgYXJlIGFsbCByZXF1aXJlZCcpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGRlclNpZ25hdHVyZSA9IHNlY3Auc2lnblN5bmMoc2lnbmluZ0lucHV0SGFzaCwgcHJpdmF0ZUtleS5zbGljZSgwLCA2NCksIHtcbiAgICAgICAgICAgIGRlcjogdHJ1ZSxcbiAgICAgICAgICAgIGNhbm9uaWNhbDogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoZm9ybWF0ID09PSAnZGVyJylcbiAgICAgICAgICAgIHJldHVybiAoMCwgdXRpbHNfMS5ieXRlc1RvSGV4KShkZXJTaWduYXR1cmUpO1xuICAgICAgICBpZiAoZm9ybWF0ID09PSAnam9zZScpXG4gICAgICAgICAgICByZXR1cm4gKDAsIGVjZHNhU2lnRm9ybWF0dGVyXzEuZGVyVG9Kb3NlKShkZXJTaWduYXR1cmUsICdFUzI1NicpO1xuICAgICAgICB0aHJvdyBFcnJvcignSW52YWxpZCBzaWduYXR1cmUgZm9ybWF0Jyk7XG4gICAgfVxuICAgIHN0YXRpYyBsb2FkU2lnbmF0dXJlKGpvc2VTaWduYXR1cmUpIHtcbiAgICAgICAgLy8gY3JlYXRlIGFuZCByZXR1cm4gdGhlIERFUi1mb3JtYXR0ZWQgc2lnbmF0dXJlIGJ5dGVzXG4gICAgICAgIHJldHVybiAoMCwgZWNkc2FTaWdGb3JtYXR0ZXJfMS5qb3NlVG9EZXIpKGpvc2VTaWduYXR1cmUsICdFUzI1NicpO1xuICAgIH1cbiAgICBzdGF0aWMgdmVyaWZ5SGFzaChzaWduaW5nSW5wdXRIYXNoLCBkZXJTaWduYXR1cmVCeXRlcywgcHVibGljS2V5KSB7XG4gICAgICAgIC8vIG1ha2Ugc3VyZSB0aGUgcmVxdWlyZWQgcGFyYW1ldGVycyBhcmUgcHJvdmlkZWRcbiAgICAgICAgaWYgKCFzaWduaW5nSW5wdXRIYXNoIHx8ICFkZXJTaWduYXR1cmVCeXRlcyB8fCAhcHVibGljS2V5KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzXzEuTWlzc2luZ1BhcmFtZXRlcnNFcnJvcignYSBzaWduaW5nIGlucHV0IGhhc2gsIGRlciBzaWduYXR1cmUsIGFuZCBwdWJsaWMga2V5IGFyZSBhbGwgcmVxdWlyZWQnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2VjcC52ZXJpZnkoZGVyU2lnbmF0dXJlQnl0ZXMsIHNpZ25pbmdJbnB1dEhhc2gsIHB1YmxpY0tleSwgeyBzdHJpY3Q6IGZhbHNlIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuU0VDUDI1NksxQ2xpZW50ID0gU0VDUDI1NksxQ2xpZW50O1xuU0VDUDI1NksxQ2xpZW50LmFsZ29yaXRobU5hbWUgPSAnRVMyNTZLJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlY3AyNTZrMS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/cryptoClients/secp256k1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/cryptoClients/sha256.js":
/*!*************************************************************!*\
  !*** ./node_modules/jsontokens/lib/cryptoClients/sha256.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hashSha256Async = exports.hashSha256 = void 0;\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/sha256.js\");\nfunction hashSha256(input) {\n    return (0, sha256_1.sha256)(input);\n}\nexports.hashSha256 = hashSha256;\nfunction hashSha256Async(input) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const isSubtleCryptoAvailable = typeof crypto !== 'undefined' && typeof crypto.subtle !== 'undefined';\n            if (isSubtleCryptoAvailable) {\n                // Use the W3C Web Crypto API if available (running in a web browser).\n                const bytes = typeof input === 'string' ? new TextEncoder().encode(input) : input;\n                const hash = yield crypto.subtle.digest('SHA-256', bytes);\n                return new Uint8Array(hash);\n            }\n            else {\n                // Otherwise try loading the Node.js `crypto` module (running in Node.js, or an older browser with a polyfill).\n                const nodeCrypto = __webpack_require__(/*! crypto */ \"crypto\");\n                if (!nodeCrypto.createHash) {\n                    throw new Error('`crypto` module does not contain `createHash`');\n                }\n                return Promise.resolve(nodeCrypto.createHash('sha256').update(input).digest());\n            }\n        }\n        catch (error) {\n            console.log(error);\n            console.log('Crypto lib not found. Neither the global `crypto.subtle` Web Crypto API, ' +\n                'nor the or the Node.js `require(\"crypto\").createHash` module is available. ' +\n                'Falling back to JS implementation.');\n            return Promise.resolve(hashSha256(input));\n        }\n    });\n}\nexports.hashSha256Async = hashSha256Async;\n//# sourceMappingURL=sha256.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvY3J5cHRvQ2xpZW50cy9zaGEyNTYuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QixHQUFHLGtCQUFrQjtBQUM1QyxpQkFBaUIsbUJBQU8sQ0FBQywwRUFBc0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxtQkFBTyxDQUFDLHNCQUFRO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyIvVXNlcnMvZWlkL0RvY3VtZW50cy9RQmxvY2svYWIvbm9kZV9tb2R1bGVzL2pzb250b2tlbnMvbGliL2NyeXB0b0NsaWVudHMvc2hhMjU2LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmhhc2hTaGEyNTZBc3luYyA9IGV4cG9ydHMuaGFzaFNoYTI1NiA9IHZvaWQgMDtcbmNvbnN0IHNoYTI1Nl8xID0gcmVxdWlyZShcIkBub2JsZS9oYXNoZXMvc2hhMjU2XCIpO1xuZnVuY3Rpb24gaGFzaFNoYTI1NihpbnB1dCkge1xuICAgIHJldHVybiAoMCwgc2hhMjU2XzEuc2hhMjU2KShpbnB1dCk7XG59XG5leHBvcnRzLmhhc2hTaGEyNTYgPSBoYXNoU2hhMjU2O1xuZnVuY3Rpb24gaGFzaFNoYTI1NkFzeW5jKGlucHV0KSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGlzU3VidGxlQ3J5cHRvQXZhaWxhYmxlID0gdHlwZW9mIGNyeXB0byAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIGNyeXB0by5zdWJ0bGUgIT09ICd1bmRlZmluZWQnO1xuICAgICAgICAgICAgaWYgKGlzU3VidGxlQ3J5cHRvQXZhaWxhYmxlKSB7XG4gICAgICAgICAgICAgICAgLy8gVXNlIHRoZSBXM0MgV2ViIENyeXB0byBBUEkgaWYgYXZhaWxhYmxlIChydW5uaW5nIGluIGEgd2ViIGJyb3dzZXIpLlxuICAgICAgICAgICAgICAgIGNvbnN0IGJ5dGVzID0gdHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJyA/IG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShpbnB1dCkgOiBpbnB1dDtcbiAgICAgICAgICAgICAgICBjb25zdCBoYXNoID0geWllbGQgY3J5cHRvLnN1YnRsZS5kaWdlc3QoJ1NIQS0yNTYnLCBieXRlcyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGhhc2gpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gT3RoZXJ3aXNlIHRyeSBsb2FkaW5nIHRoZSBOb2RlLmpzIGBjcnlwdG9gIG1vZHVsZSAocnVubmluZyBpbiBOb2RlLmpzLCBvciBhbiBvbGRlciBicm93c2VyIHdpdGggYSBwb2x5ZmlsbCkuXG4gICAgICAgICAgICAgICAgY29uc3Qgbm9kZUNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpO1xuICAgICAgICAgICAgICAgIGlmICghbm9kZUNyeXB0by5jcmVhdGVIYXNoKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignYGNyeXB0b2AgbW9kdWxlIGRvZXMgbm90IGNvbnRhaW4gYGNyZWF0ZUhhc2hgJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUobm9kZUNyeXB0by5jcmVhdGVIYXNoKCdzaGEyNTYnKS51cGRhdGUoaW5wdXQpLmRpZ2VzdCgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdDcnlwdG8gbGliIG5vdCBmb3VuZC4gTmVpdGhlciB0aGUgZ2xvYmFsIGBjcnlwdG8uc3VidGxlYCBXZWIgQ3J5cHRvIEFQSSwgJyArXG4gICAgICAgICAgICAgICAgJ25vciB0aGUgb3IgdGhlIE5vZGUuanMgYHJlcXVpcmUoXCJjcnlwdG9cIikuY3JlYXRlSGFzaGAgbW9kdWxlIGlzIGF2YWlsYWJsZS4gJyArXG4gICAgICAgICAgICAgICAgJ0ZhbGxpbmcgYmFjayB0byBKUyBpbXBsZW1lbnRhdGlvbi4nKTtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoaGFzaFNoYTI1NihpbnB1dCkpO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5leHBvcnRzLmhhc2hTaGEyNTZBc3luYyA9IGhhc2hTaGEyNTZBc3luYztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNoYTI1Ni5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/cryptoClients/sha256.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/decode.js":
/*!***********************************************!*\
  !*** ./node_modules/jsontokens/lib/decode.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeToken = void 0;\nconst base64url = __webpack_require__(/*! ./base64Url */ \"(ssr)/./node_modules/jsontokens/lib/base64Url.js\");\nfunction decodeToken(token) {\n    if (typeof token === 'string') {\n        // decompose the token into parts\n        const tokenParts = token.split('.');\n        const header = JSON.parse(base64url.decode(tokenParts[0]));\n        const payload = JSON.parse(base64url.decode(tokenParts[1]));\n        const signature = tokenParts[2];\n        // return the token object\n        return {\n            header: header,\n            payload: payload,\n            signature: signature,\n        };\n    }\n    else if (typeof token === 'object') {\n        if (typeof token.payload !== 'string') {\n            throw new Error('Expected token payload to be a base64 or json string');\n        }\n        let payload = token.payload;\n        if (token.payload[0] !== '{') {\n            payload = base64url.decode(payload);\n        }\n        const allHeaders = [];\n        token.header.map((headerValue) => {\n            const header = JSON.parse(base64url.decode(headerValue));\n            allHeaders.push(header);\n        });\n        return {\n            header: allHeaders,\n            payload: JSON.parse(payload),\n            signature: token.signature,\n        };\n    }\n}\nexports.decodeToken = decodeToken;\n//# sourceMappingURL=decode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvZGVjb2RlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQjtBQUNuQixrQkFBa0IsbUJBQU8sQ0FBQyxxRUFBYTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9laWQvRG9jdW1lbnRzL1FCbG9jay9hYi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvZGVjb2RlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWNvZGVUb2tlbiA9IHZvaWQgMDtcbmNvbnN0IGJhc2U2NHVybCA9IHJlcXVpcmUoXCIuL2Jhc2U2NFVybFwiKTtcbmZ1bmN0aW9uIGRlY29kZVRva2VuKHRva2VuKSB7XG4gICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgLy8gZGVjb21wb3NlIHRoZSB0b2tlbiBpbnRvIHBhcnRzXG4gICAgICAgIGNvbnN0IHRva2VuUGFydHMgPSB0b2tlbi5zcGxpdCgnLicpO1xuICAgICAgICBjb25zdCBoZWFkZXIgPSBKU09OLnBhcnNlKGJhc2U2NHVybC5kZWNvZGUodG9rZW5QYXJ0c1swXSkpO1xuICAgICAgICBjb25zdCBwYXlsb2FkID0gSlNPTi5wYXJzZShiYXNlNjR1cmwuZGVjb2RlKHRva2VuUGFydHNbMV0pKTtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gdG9rZW5QYXJ0c1syXTtcbiAgICAgICAgLy8gcmV0dXJuIHRoZSB0b2tlbiBvYmplY3RcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGhlYWRlcjogaGVhZGVyLFxuICAgICAgICAgICAgcGF5bG9hZDogcGF5bG9hZCxcbiAgICAgICAgICAgIHNpZ25hdHVyZTogc2lnbmF0dXJlLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2YgdG9rZW4gPT09ICdvYmplY3QnKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdG9rZW4ucGF5bG9hZCAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgdG9rZW4gcGF5bG9hZCB0byBiZSBhIGJhc2U2NCBvciBqc29uIHN0cmluZycpO1xuICAgICAgICB9XG4gICAgICAgIGxldCBwYXlsb2FkID0gdG9rZW4ucGF5bG9hZDtcbiAgICAgICAgaWYgKHRva2VuLnBheWxvYWRbMF0gIT09ICd7Jykge1xuICAgICAgICAgICAgcGF5bG9hZCA9IGJhc2U2NHVybC5kZWNvZGUocGF5bG9hZCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYWxsSGVhZGVycyA9IFtdO1xuICAgICAgICB0b2tlbi5oZWFkZXIubWFwKChoZWFkZXJWYWx1ZSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaGVhZGVyID0gSlNPTi5wYXJzZShiYXNlNjR1cmwuZGVjb2RlKGhlYWRlclZhbHVlKSk7XG4gICAgICAgICAgICBhbGxIZWFkZXJzLnB1c2goaGVhZGVyKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBoZWFkZXI6IGFsbEhlYWRlcnMsXG4gICAgICAgICAgICBwYXlsb2FkOiBKU09OLnBhcnNlKHBheWxvYWQpLFxuICAgICAgICAgICAgc2lnbmF0dXJlOiB0b2tlbi5zaWduYXR1cmUsXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0cy5kZWNvZGVUb2tlbiA9IGRlY29kZVRva2VuO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVjb2RlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/decode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/ecdsaSigFormatter.js":
/*!**********************************************************!*\
  !*** ./node_modules/jsontokens/lib/ecdsaSigFormatter.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n//  NOTICE\n//  Copyright 2015 D2L Corporation\n//\n//  Licensed under the Apache License, Version 2.0 (the \"License\");\n//  you may not use this file except in compliance with the License.\n//  You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n//  Unless required by applicable law or agreed to in writing, software\n//  distributed under the License is distributed on an \"AS IS\" BASIS,\n//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//  See the License for the specific language governing permissions and\n//  limitations under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.joseToDer = exports.derToJose = void 0;\n// The following code is adapted from https://github.com/Brightspace/node-ecdsa-sig-formatter\nconst base64_js_1 = __webpack_require__(/*! base64-js */ \"(ssr)/./node_modules/base64-js/index.js\");\nconst base64Url_1 = __webpack_require__(/*! ./base64Url */ \"(ssr)/./node_modules/jsontokens/lib/base64Url.js\");\nfunction getParamSize(keySize) {\n    return ((keySize / 8) | 0) + (keySize % 8 === 0 ? 0 : 1);\n}\nconst paramBytesForAlg = {\n    ES256: getParamSize(256),\n    ES384: getParamSize(384),\n    ES512: getParamSize(521),\n};\nfunction getParamBytesForAlg(alg) {\n    const paramBytes = paramBytesForAlg[alg];\n    if (paramBytes) {\n        return paramBytes;\n    }\n    throw new Error(`Unknown algorithm \"${alg}\"`);\n}\nconst MAX_OCTET = 0x80;\nconst CLASS_UNIVERSAL = 0;\nconst PRIMITIVE_BIT = 0x20;\nconst TAG_SEQ = 0x10;\nconst TAG_INT = 0x02;\nconst ENCODED_TAG_SEQ = TAG_SEQ | PRIMITIVE_BIT | (CLASS_UNIVERSAL << 6);\nconst ENCODED_TAG_INT = TAG_INT | (CLASS_UNIVERSAL << 6);\nfunction signatureAsBytes(signature) {\n    if (signature instanceof Uint8Array) {\n        return signature;\n    }\n    else if ('string' === typeof signature) {\n        return (0, base64_js_1.toByteArray)((0, base64Url_1.pad)(signature));\n    }\n    throw new TypeError('ECDSA signature must be a Base64 string or a Uint8Array');\n}\nfunction derToJose(signature, alg) {\n    const signatureBytes = signatureAsBytes(signature);\n    const paramBytes = getParamBytesForAlg(alg);\n    // the DER encoded param should at most be the param size, plus a padding\n    // zero, since due to being a signed integer\n    const maxEncodedParamLength = paramBytes + 1;\n    const inputLength = signatureBytes.length;\n    let offset = 0;\n    if (signatureBytes[offset++] !== ENCODED_TAG_SEQ) {\n        throw new Error('Could not find expected \"seq\"');\n    }\n    let seqLength = signatureBytes[offset++];\n    if (seqLength === (MAX_OCTET | 1)) {\n        seqLength = signatureBytes[offset++];\n    }\n    if (inputLength - offset < seqLength) {\n        throw new Error(`\"seq\" specified length of \"${seqLength}\", only \"${inputLength - offset}\" remaining`);\n    }\n    if (signatureBytes[offset++] !== ENCODED_TAG_INT) {\n        throw new Error('Could not find expected \"int\" for \"r\"');\n    }\n    const rLength = signatureBytes[offset++];\n    if (inputLength - offset - 2 < rLength) {\n        throw new Error(`\"r\" specified length of \"${rLength}\", only \"${inputLength - offset - 2}\" available`);\n    }\n    if (maxEncodedParamLength < rLength) {\n        throw new Error(`\"r\" specified length of \"${rLength}\", max of \"${maxEncodedParamLength}\" is acceptable`);\n    }\n    const rOffset = offset;\n    offset += rLength;\n    if (signatureBytes[offset++] !== ENCODED_TAG_INT) {\n        throw new Error('Could not find expected \"int\" for \"s\"');\n    }\n    const sLength = signatureBytes[offset++];\n    if (inputLength - offset !== sLength) {\n        throw new Error(`\"s\" specified length of \"${sLength}\", expected \"${inputLength - offset}\"`);\n    }\n    if (maxEncodedParamLength < sLength) {\n        throw new Error(`\"s\" specified length of \"${sLength}\", max of \"${maxEncodedParamLength}\" is acceptable`);\n    }\n    const sOffset = offset;\n    offset += sLength;\n    if (offset !== inputLength) {\n        throw new Error(`Expected to consume entire array, but \"${inputLength - offset}\" bytes remain`);\n    }\n    const rPadding = paramBytes - rLength;\n    const sPadding = paramBytes - sLength;\n    const dst = new Uint8Array(rPadding + rLength + sPadding + sLength);\n    for (offset = 0; offset < rPadding; ++offset) {\n        dst[offset] = 0;\n    }\n    dst.set(signatureBytes.subarray(rOffset + Math.max(-rPadding, 0), rOffset + rLength), offset);\n    offset = paramBytes;\n    for (const o = offset; offset < o + sPadding; ++offset) {\n        dst[offset] = 0;\n    }\n    dst.set(signatureBytes.subarray(sOffset + Math.max(-sPadding, 0), sOffset + sLength), offset);\n    return (0, base64Url_1.escape)((0, base64_js_1.fromByteArray)(dst));\n}\nexports.derToJose = derToJose;\nfunction countPadding(buf, start, stop) {\n    let padding = 0;\n    while (start + padding < stop && buf[start + padding] === 0) {\n        ++padding;\n    }\n    const needsSign = buf[start + padding] >= MAX_OCTET;\n    if (needsSign) {\n        --padding;\n    }\n    return padding;\n}\nfunction joseToDer(signature, alg) {\n    signature = signatureAsBytes(signature);\n    const paramBytes = getParamBytesForAlg(alg);\n    const signatureBytes = signature.length;\n    if (signatureBytes !== paramBytes * 2) {\n        throw new TypeError(`\"${alg}\" signatures must be \"${paramBytes * 2}\" bytes, saw \"${signatureBytes}\"`);\n    }\n    const rPadding = countPadding(signature, 0, paramBytes);\n    const sPadding = countPadding(signature, paramBytes, signature.length);\n    const rLength = paramBytes - rPadding;\n    const sLength = paramBytes - sPadding;\n    const rsBytes = 1 + 1 + rLength + 1 + 1 + sLength;\n    const shortLength = rsBytes < MAX_OCTET;\n    const dst = new Uint8Array((shortLength ? 2 : 3) + rsBytes);\n    let offset = 0;\n    dst[offset++] = ENCODED_TAG_SEQ;\n    if (shortLength) {\n        // Bit 8 has value \"0\"\n        // bits 7-1 give the length.\n        dst[offset++] = rsBytes;\n    }\n    else {\n        // Bit 8 of first octet has value \"1\"\n        // bits 7-1 give the number of additional length octets.\n        dst[offset++] = MAX_OCTET | 1;\n        // length, base 256\n        dst[offset++] = rsBytes & 0xff;\n    }\n    dst[offset++] = ENCODED_TAG_INT;\n    dst[offset++] = rLength;\n    if (rPadding < 0) {\n        dst[offset++] = 0;\n        dst.set(signature.subarray(0, paramBytes), offset);\n        offset += paramBytes;\n    }\n    else {\n        dst.set(signature.subarray(rPadding, paramBytes), offset);\n        offset += paramBytes - rPadding;\n    }\n    dst[offset++] = ENCODED_TAG_INT;\n    dst[offset++] = sLength;\n    if (sPadding < 0) {\n        dst[offset++] = 0;\n        dst.set(signature.subarray(paramBytes), offset);\n    }\n    else {\n        dst.set(signature.subarray(paramBytes + sPadding), offset);\n    }\n    return dst;\n}\nexports.joseToDer = joseToDer;\n//# sourceMappingURL=ecdsaSigFormatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/ecdsaSigFormatter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/errors.js":
/*!***********************************************!*\
  !*** ./node_modules/jsontokens/lib/errors.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidTokenError = exports.MissingParametersError = void 0;\nclass MissingParametersError extends Error {\n    constructor(message) {\n        super();\n        this.name = 'MissingParametersError';\n        this.message = message || '';\n    }\n}\nexports.MissingParametersError = MissingParametersError;\nclass InvalidTokenError extends Error {\n    constructor(message) {\n        super();\n        this.name = 'InvalidTokenError';\n        this.message = message || '';\n    }\n}\nexports.InvalidTokenError = InvalidTokenError;\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QixHQUFHLDhCQUE4QjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QiIsInNvdXJjZXMiOlsiL1VzZXJzL2VpZC9Eb2N1bWVudHMvUUJsb2NrL2FiL25vZGVfbW9kdWxlcy9qc29udG9rZW5zL2xpYi9lcnJvcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkludmFsaWRUb2tlbkVycm9yID0gZXhwb3J0cy5NaXNzaW5nUGFyYW1ldGVyc0Vycm9yID0gdm9pZCAwO1xuY2xhc3MgTWlzc2luZ1BhcmFtZXRlcnNFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdNaXNzaW5nUGFyYW1ldGVyc0Vycm9yJztcbiAgICAgICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZSB8fCAnJztcbiAgICB9XG59XG5leHBvcnRzLk1pc3NpbmdQYXJhbWV0ZXJzRXJyb3IgPSBNaXNzaW5nUGFyYW1ldGVyc0Vycm9yO1xuY2xhc3MgSW52YWxpZFRva2VuRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLm5hbWUgPSAnSW52YWxpZFRva2VuRXJyb3InO1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlIHx8ICcnO1xuICAgIH1cbn1cbmV4cG9ydHMuSW52YWxpZFRva2VuRXJyb3IgPSBJbnZhbGlkVG9rZW5FcnJvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9ycy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/index.js":
/*!**********************************************!*\
  !*** ./node_modules/jsontokens/lib/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./signer */ \"(ssr)/./node_modules/jsontokens/lib/signer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./verifier */ \"(ssr)/./node_modules/jsontokens/lib/verifier.js\"), exports);\n__exportStar(__webpack_require__(/*! ./decode */ \"(ssr)/./node_modules/jsontokens/lib/decode.js\"), exports);\n__exportStar(__webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/jsontokens/lib/errors.js\"), exports);\n__exportStar(__webpack_require__(/*! ./cryptoClients */ \"(ssr)/./node_modules/jsontokens/lib/cryptoClients/index.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxtQkFBTyxDQUFDLCtEQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyxtRUFBWTtBQUNqQyxhQUFhLG1CQUFPLENBQUMsK0RBQVU7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLCtEQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyxtRkFBaUI7QUFDdEMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9laWQvRG9jdW1lbnRzL1FCbG9jay9hYi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zaWduZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3ZlcmlmaWVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9kZWNvZGVcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2Vycm9yc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY3J5cHRvQ2xpZW50c1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/signer.js":
/*!***********************************************!*\
  !*** ./node_modules/jsontokens/lib/signer.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TokenSigner = exports.createUnsecuredToken = void 0;\nconst base64url = __webpack_require__(/*! ./base64Url */ \"(ssr)/./node_modules/jsontokens/lib/base64Url.js\");\nconst cryptoClients_1 = __webpack_require__(/*! ./cryptoClients */ \"(ssr)/./node_modules/jsontokens/lib/cryptoClients/index.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/jsontokens/lib/errors.js\");\nconst sha256_1 = __webpack_require__(/*! ./cryptoClients/sha256 */ \"(ssr)/./node_modules/jsontokens/lib/cryptoClients/sha256.js\");\nfunction createSigningInput(payload, header) {\n    const tokenParts = [];\n    // add in the header\n    const encodedHeader = base64url.encode(JSON.stringify(header));\n    tokenParts.push(encodedHeader);\n    // add in the payload\n    const encodedPayload = base64url.encode(JSON.stringify(payload));\n    tokenParts.push(encodedPayload);\n    // prepare the message\n    const signingInput = tokenParts.join('.');\n    // return the signing input\n    return signingInput;\n}\nfunction createUnsecuredToken(payload) {\n    const header = { typ: 'JWT', alg: 'none' };\n    return createSigningInput(payload, header) + '.';\n}\nexports.createUnsecuredToken = createUnsecuredToken;\nclass TokenSigner {\n    constructor(signingAlgorithm, rawPrivateKey) {\n        if (!(signingAlgorithm && rawPrivateKey)) {\n            throw new errors_1.MissingParametersError('a signing algorithm and private key are required');\n        }\n        if (typeof signingAlgorithm !== 'string') {\n            throw new Error('signing algorithm parameter must be a string');\n        }\n        signingAlgorithm = signingAlgorithm.toUpperCase();\n        if (!cryptoClients_1.cryptoClients.hasOwnProperty(signingAlgorithm)) {\n            throw new Error('invalid signing algorithm');\n        }\n        this.tokenType = 'JWT';\n        this.cryptoClient = cryptoClients_1.cryptoClients[signingAlgorithm];\n        this.rawPrivateKey = rawPrivateKey;\n    }\n    header(header = {}) {\n        const defaultHeader = { typ: this.tokenType, alg: this.cryptoClient.algorithmName };\n        return Object.assign({}, defaultHeader, header);\n    }\n    sign(payload, expanded = false, customHeader = {}) {\n        // generate the token header\n        const header = this.header(customHeader);\n        // prepare the message to be signed\n        const signingInput = createSigningInput(payload, header);\n        const signingInputHash = (0, sha256_1.hashSha256)(signingInput);\n        return this.createWithSignedHash(payload, expanded, header, signingInput, signingInputHash);\n    }\n    signAsync(payload, expanded = false, customHeader = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // generate the token header\n            const header = this.header(customHeader);\n            // prepare the message to be signed\n            const signingInput = createSigningInput(payload, header);\n            const signingInputHash = yield (0, sha256_1.hashSha256Async)(signingInput);\n            return this.createWithSignedHash(payload, expanded, header, signingInput, signingInputHash);\n        });\n    }\n    createWithSignedHash(payload, expanded, header, signingInput, signingInputHash) {\n        // sign the message and add in the signature\n        const signature = this.cryptoClient.signHash(signingInputHash, this.rawPrivateKey);\n        if (expanded) {\n            const signedToken = {\n                header: [base64url.encode(JSON.stringify(header))],\n                payload: JSON.stringify(payload),\n                signature: [signature],\n            };\n            return signedToken;\n        }\n        else {\n            return [signingInput, signature].join('.');\n        }\n    }\n}\nexports.TokenSigner = TokenSigner;\n//# sourceMappingURL=signer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvc2lnbmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUIsR0FBRyw0QkFBNEI7QUFDbEQsa0JBQWtCLG1CQUFPLENBQUMscUVBQWE7QUFDdkMsd0JBQXdCLG1CQUFPLENBQUMsbUZBQWlCO0FBQ2pELGlCQUFpQixtQkFBTyxDQUFDLCtEQUFVO0FBQ25DLGlCQUFpQixtQkFBTyxDQUFDLDJGQUF3QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEIsZ0NBQWdDO0FBQ2hDLCtCQUErQjtBQUMvQjtBQUNBLHFEQUFxRDtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRDtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyIvVXNlcnMvZWlkL0RvY3VtZW50cy9RQmxvY2svYWIvbm9kZV9tb2R1bGVzL2pzb250b2tlbnMvbGliL3NpZ25lci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Ub2tlblNpZ25lciA9IGV4cG9ydHMuY3JlYXRlVW5zZWN1cmVkVG9rZW4gPSB2b2lkIDA7XG5jb25zdCBiYXNlNjR1cmwgPSByZXF1aXJlKFwiLi9iYXNlNjRVcmxcIik7XG5jb25zdCBjcnlwdG9DbGllbnRzXzEgPSByZXF1aXJlKFwiLi9jcnlwdG9DbGllbnRzXCIpO1xuY29uc3QgZXJyb3JzXzEgPSByZXF1aXJlKFwiLi9lcnJvcnNcIik7XG5jb25zdCBzaGEyNTZfMSA9IHJlcXVpcmUoXCIuL2NyeXB0b0NsaWVudHMvc2hhMjU2XCIpO1xuZnVuY3Rpb24gY3JlYXRlU2lnbmluZ0lucHV0KHBheWxvYWQsIGhlYWRlcikge1xuICAgIGNvbnN0IHRva2VuUGFydHMgPSBbXTtcbiAgICAvLyBhZGQgaW4gdGhlIGhlYWRlclxuICAgIGNvbnN0IGVuY29kZWRIZWFkZXIgPSBiYXNlNjR1cmwuZW5jb2RlKEpTT04uc3RyaW5naWZ5KGhlYWRlcikpO1xuICAgIHRva2VuUGFydHMucHVzaChlbmNvZGVkSGVhZGVyKTtcbiAgICAvLyBhZGQgaW4gdGhlIHBheWxvYWRcbiAgICBjb25zdCBlbmNvZGVkUGF5bG9hZCA9IGJhc2U2NHVybC5lbmNvZGUoSlNPTi5zdHJpbmdpZnkocGF5bG9hZCkpO1xuICAgIHRva2VuUGFydHMucHVzaChlbmNvZGVkUGF5bG9hZCk7XG4gICAgLy8gcHJlcGFyZSB0aGUgbWVzc2FnZVxuICAgIGNvbnN0IHNpZ25pbmdJbnB1dCA9IHRva2VuUGFydHMuam9pbignLicpO1xuICAgIC8vIHJldHVybiB0aGUgc2lnbmluZyBpbnB1dFxuICAgIHJldHVybiBzaWduaW5nSW5wdXQ7XG59XG5mdW5jdGlvbiBjcmVhdGVVbnNlY3VyZWRUb2tlbihwYXlsb2FkKSB7XG4gICAgY29uc3QgaGVhZGVyID0geyB0eXA6ICdKV1QnLCBhbGc6ICdub25lJyB9O1xuICAgIHJldHVybiBjcmVhdGVTaWduaW5nSW5wdXQocGF5bG9hZCwgaGVhZGVyKSArICcuJztcbn1cbmV4cG9ydHMuY3JlYXRlVW5zZWN1cmVkVG9rZW4gPSBjcmVhdGVVbnNlY3VyZWRUb2tlbjtcbmNsYXNzIFRva2VuU2lnbmVyIHtcbiAgICBjb25zdHJ1Y3RvcihzaWduaW5nQWxnb3JpdGhtLCByYXdQcml2YXRlS2V5KSB7XG4gICAgICAgIGlmICghKHNpZ25pbmdBbGdvcml0aG0gJiYgcmF3UHJpdmF0ZUtleSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfMS5NaXNzaW5nUGFyYW1ldGVyc0Vycm9yKCdhIHNpZ25pbmcgYWxnb3JpdGhtIGFuZCBwcml2YXRlIGtleSBhcmUgcmVxdWlyZWQnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHNpZ25pbmdBbGdvcml0aG0gIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3NpZ25pbmcgYWxnb3JpdGhtIHBhcmFtZXRlciBtdXN0IGJlIGEgc3RyaW5nJyk7XG4gICAgICAgIH1cbiAgICAgICAgc2lnbmluZ0FsZ29yaXRobSA9IHNpZ25pbmdBbGdvcml0aG0udG9VcHBlckNhc2UoKTtcbiAgICAgICAgaWYgKCFjcnlwdG9DbGllbnRzXzEuY3J5cHRvQ2xpZW50cy5oYXNPd25Qcm9wZXJ0eShzaWduaW5nQWxnb3JpdGhtKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIHNpZ25pbmcgYWxnb3JpdGhtJyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy50b2tlblR5cGUgPSAnSldUJztcbiAgICAgICAgdGhpcy5jcnlwdG9DbGllbnQgPSBjcnlwdG9DbGllbnRzXzEuY3J5cHRvQ2xpZW50c1tzaWduaW5nQWxnb3JpdGhtXTtcbiAgICAgICAgdGhpcy5yYXdQcml2YXRlS2V5ID0gcmF3UHJpdmF0ZUtleTtcbiAgICB9XG4gICAgaGVhZGVyKGhlYWRlciA9IHt9KSB7XG4gICAgICAgIGNvbnN0IGRlZmF1bHRIZWFkZXIgPSB7IHR5cDogdGhpcy50b2tlblR5cGUsIGFsZzogdGhpcy5jcnlwdG9DbGllbnQuYWxnb3JpdGhtTmFtZSB9O1xuICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdEhlYWRlciwgaGVhZGVyKTtcbiAgICB9XG4gICAgc2lnbihwYXlsb2FkLCBleHBhbmRlZCA9IGZhbHNlLCBjdXN0b21IZWFkZXIgPSB7fSkge1xuICAgICAgICAvLyBnZW5lcmF0ZSB0aGUgdG9rZW4gaGVhZGVyXG4gICAgICAgIGNvbnN0IGhlYWRlciA9IHRoaXMuaGVhZGVyKGN1c3RvbUhlYWRlcik7XG4gICAgICAgIC8vIHByZXBhcmUgdGhlIG1lc3NhZ2UgdG8gYmUgc2lnbmVkXG4gICAgICAgIGNvbnN0IHNpZ25pbmdJbnB1dCA9IGNyZWF0ZVNpZ25pbmdJbnB1dChwYXlsb2FkLCBoZWFkZXIpO1xuICAgICAgICBjb25zdCBzaWduaW5nSW5wdXRIYXNoID0gKDAsIHNoYTI1Nl8xLmhhc2hTaGEyNTYpKHNpZ25pbmdJbnB1dCk7XG4gICAgICAgIHJldHVybiB0aGlzLmNyZWF0ZVdpdGhTaWduZWRIYXNoKHBheWxvYWQsIGV4cGFuZGVkLCBoZWFkZXIsIHNpZ25pbmdJbnB1dCwgc2lnbmluZ0lucHV0SGFzaCk7XG4gICAgfVxuICAgIHNpZ25Bc3luYyhwYXlsb2FkLCBleHBhbmRlZCA9IGZhbHNlLCBjdXN0b21IZWFkZXIgPSB7fSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgLy8gZ2VuZXJhdGUgdGhlIHRva2VuIGhlYWRlclxuICAgICAgICAgICAgY29uc3QgaGVhZGVyID0gdGhpcy5oZWFkZXIoY3VzdG9tSGVhZGVyKTtcbiAgICAgICAgICAgIC8vIHByZXBhcmUgdGhlIG1lc3NhZ2UgdG8gYmUgc2lnbmVkXG4gICAgICAgICAgICBjb25zdCBzaWduaW5nSW5wdXQgPSBjcmVhdGVTaWduaW5nSW5wdXQocGF5bG9hZCwgaGVhZGVyKTtcbiAgICAgICAgICAgIGNvbnN0IHNpZ25pbmdJbnB1dEhhc2ggPSB5aWVsZCAoMCwgc2hhMjU2XzEuaGFzaFNoYTI1NkFzeW5jKShzaWduaW5nSW5wdXQpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY3JlYXRlV2l0aFNpZ25lZEhhc2gocGF5bG9hZCwgZXhwYW5kZWQsIGhlYWRlciwgc2lnbmluZ0lucHV0LCBzaWduaW5nSW5wdXRIYXNoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNyZWF0ZVdpdGhTaWduZWRIYXNoKHBheWxvYWQsIGV4cGFuZGVkLCBoZWFkZXIsIHNpZ25pbmdJbnB1dCwgc2lnbmluZ0lucHV0SGFzaCkge1xuICAgICAgICAvLyBzaWduIHRoZSBtZXNzYWdlIGFuZCBhZGQgaW4gdGhlIHNpZ25hdHVyZVxuICAgICAgICBjb25zdCBzaWduYXR1cmUgPSB0aGlzLmNyeXB0b0NsaWVudC5zaWduSGFzaChzaWduaW5nSW5wdXRIYXNoLCB0aGlzLnJhd1ByaXZhdGVLZXkpO1xuICAgICAgICBpZiAoZXhwYW5kZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IHNpZ25lZFRva2VuID0ge1xuICAgICAgICAgICAgICAgIGhlYWRlcjogW2Jhc2U2NHVybC5lbmNvZGUoSlNPTi5zdHJpbmdpZnkoaGVhZGVyKSldLFxuICAgICAgICAgICAgICAgIHBheWxvYWQ6IEpTT04uc3RyaW5naWZ5KHBheWxvYWQpLFxuICAgICAgICAgICAgICAgIHNpZ25hdHVyZTogW3NpZ25hdHVyZV0sXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIHNpZ25lZFRva2VuO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIFtzaWduaW5nSW5wdXQsIHNpZ25hdHVyZV0uam9pbignLicpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5Ub2tlblNpZ25lciA9IFRva2VuU2lnbmVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2lnbmVyLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/signer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsontokens/lib/verifier.js":
/*!*************************************************!*\
  !*** ./node_modules/jsontokens/lib/verifier.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TokenVerifier = void 0;\nconst base64url = __webpack_require__(/*! ./base64Url */ \"(ssr)/./node_modules/jsontokens/lib/base64Url.js\");\nconst cryptoClients_1 = __webpack_require__(/*! ./cryptoClients */ \"(ssr)/./node_modules/jsontokens/lib/cryptoClients/index.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/jsontokens/lib/errors.js\");\nconst sha256_1 = __webpack_require__(/*! ./cryptoClients/sha256 */ \"(ssr)/./node_modules/jsontokens/lib/cryptoClients/sha256.js\");\nclass TokenVerifier {\n    constructor(signingAlgorithm, rawPublicKey) {\n        if (!(signingAlgorithm && rawPublicKey)) {\n            throw new errors_1.MissingParametersError('a signing algorithm and public key are required');\n        }\n        if (typeof signingAlgorithm !== 'string') {\n            throw 'signing algorithm parameter must be a string';\n        }\n        signingAlgorithm = signingAlgorithm.toUpperCase();\n        if (!cryptoClients_1.cryptoClients.hasOwnProperty(signingAlgorithm)) {\n            throw 'invalid signing algorithm';\n        }\n        this.tokenType = 'JWT';\n        this.cryptoClient = cryptoClients_1.cryptoClients[signingAlgorithm];\n        this.rawPublicKey = rawPublicKey;\n    }\n    verify(token) {\n        if (typeof token === 'string') {\n            return this.verifyCompact(token, false);\n        }\n        else if (typeof token === 'object') {\n            return this.verifyExpanded(token, false);\n        }\n        else {\n            return false;\n        }\n    }\n    verifyAsync(token) {\n        if (typeof token === 'string') {\n            return this.verifyCompact(token, true);\n        }\n        else if (typeof token === 'object') {\n            return this.verifyExpanded(token, true);\n        }\n        else {\n            return Promise.resolve(false);\n        }\n    }\n    verifyCompact(token, async) {\n        // decompose the token into parts\n        const tokenParts = token.split('.');\n        // calculate the signing input hash\n        const signingInput = tokenParts[0] + '.' + tokenParts[1];\n        const performVerify = (signingInputHash) => {\n            // extract the signature as a DER array\n            const derSignatureBytes = this.cryptoClient.loadSignature(tokenParts[2]);\n            // verify the signed hash\n            return this.cryptoClient.verifyHash(signingInputHash, derSignatureBytes, this.rawPublicKey);\n        };\n        if (async) {\n            return (0, sha256_1.hashSha256Async)(signingInput).then(signingInputHash => performVerify(signingInputHash));\n        }\n        else {\n            const signingInputHash = (0, sha256_1.hashSha256)(signingInput);\n            return performVerify(signingInputHash);\n        }\n    }\n    verifyExpanded(token, async) {\n        const signingInput = [token['header'].join('.'), base64url.encode(token['payload'])].join('.');\n        let verified = true;\n        const performVerify = (signingInputHash) => {\n            token['signature'].map((signature) => {\n                const derSignatureBytes = this.cryptoClient.loadSignature(signature);\n                const signatureVerified = this.cryptoClient.verifyHash(signingInputHash, derSignatureBytes, this.rawPublicKey);\n                if (!signatureVerified) {\n                    verified = false;\n                }\n            });\n            return verified;\n        };\n        if (async) {\n            return (0, sha256_1.hashSha256Async)(signingInput).then(signingInputHash => performVerify(signingInputHash));\n        }\n        else {\n            const signingInputHash = (0, sha256_1.hashSha256)(signingInput);\n            return performVerify(signingInputHash);\n        }\n    }\n}\nexports.TokenVerifier = TokenVerifier;\n//# sourceMappingURL=verifier.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvdmVyaWZpZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCLGtCQUFrQixtQkFBTyxDQUFDLHFFQUFhO0FBQ3ZDLHdCQUF3QixtQkFBTyxDQUFDLG1GQUFpQjtBQUNqRCxpQkFBaUIsbUJBQU8sQ0FBQywrREFBVTtBQUNuQyxpQkFBaUIsbUJBQU8sQ0FBQywyRkFBd0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQiIsInNvdXJjZXMiOlsiL1VzZXJzL2VpZC9Eb2N1bWVudHMvUUJsb2NrL2FiL25vZGVfbW9kdWxlcy9qc29udG9rZW5zL2xpYi92ZXJpZmllci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVG9rZW5WZXJpZmllciA9IHZvaWQgMDtcbmNvbnN0IGJhc2U2NHVybCA9IHJlcXVpcmUoXCIuL2Jhc2U2NFVybFwiKTtcbmNvbnN0IGNyeXB0b0NsaWVudHNfMSA9IHJlcXVpcmUoXCIuL2NyeXB0b0NsaWVudHNcIik7XG5jb25zdCBlcnJvcnNfMSA9IHJlcXVpcmUoXCIuL2Vycm9yc1wiKTtcbmNvbnN0IHNoYTI1Nl8xID0gcmVxdWlyZShcIi4vY3J5cHRvQ2xpZW50cy9zaGEyNTZcIik7XG5jbGFzcyBUb2tlblZlcmlmaWVyIHtcbiAgICBjb25zdHJ1Y3RvcihzaWduaW5nQWxnb3JpdGhtLCByYXdQdWJsaWNLZXkpIHtcbiAgICAgICAgaWYgKCEoc2lnbmluZ0FsZ29yaXRobSAmJiByYXdQdWJsaWNLZXkpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzXzEuTWlzc2luZ1BhcmFtZXRlcnNFcnJvcignYSBzaWduaW5nIGFsZ29yaXRobSBhbmQgcHVibGljIGtleSBhcmUgcmVxdWlyZWQnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHNpZ25pbmdBbGdvcml0aG0gIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICB0aHJvdyAnc2lnbmluZyBhbGdvcml0aG0gcGFyYW1ldGVyIG11c3QgYmUgYSBzdHJpbmcnO1xuICAgICAgICB9XG4gICAgICAgIHNpZ25pbmdBbGdvcml0aG0gPSBzaWduaW5nQWxnb3JpdGhtLnRvVXBwZXJDYXNlKCk7XG4gICAgICAgIGlmICghY3J5cHRvQ2xpZW50c18xLmNyeXB0b0NsaWVudHMuaGFzT3duUHJvcGVydHkoc2lnbmluZ0FsZ29yaXRobSkpIHtcbiAgICAgICAgICAgIHRocm93ICdpbnZhbGlkIHNpZ25pbmcgYWxnb3JpdGhtJztcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnRva2VuVHlwZSA9ICdKV1QnO1xuICAgICAgICB0aGlzLmNyeXB0b0NsaWVudCA9IGNyeXB0b0NsaWVudHNfMS5jcnlwdG9DbGllbnRzW3NpZ25pbmdBbGdvcml0aG1dO1xuICAgICAgICB0aGlzLnJhd1B1YmxpY0tleSA9IHJhd1B1YmxpY0tleTtcbiAgICB9XG4gICAgdmVyaWZ5KHRva2VuKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy52ZXJpZnlDb21wYWN0KHRva2VuLCBmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIHRva2VuID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMudmVyaWZ5RXhwYW5kZWQodG9rZW4sIGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB2ZXJpZnlBc3luYyh0b2tlbikge1xuICAgICAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMudmVyaWZ5Q29tcGFjdCh0b2tlbiwgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIHRva2VuID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMudmVyaWZ5RXhwYW5kZWQodG9rZW4sIHRydWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShmYWxzZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdmVyaWZ5Q29tcGFjdCh0b2tlbiwgYXN5bmMpIHtcbiAgICAgICAgLy8gZGVjb21wb3NlIHRoZSB0b2tlbiBpbnRvIHBhcnRzXG4gICAgICAgIGNvbnN0IHRva2VuUGFydHMgPSB0b2tlbi5zcGxpdCgnLicpO1xuICAgICAgICAvLyBjYWxjdWxhdGUgdGhlIHNpZ25pbmcgaW5wdXQgaGFzaFxuICAgICAgICBjb25zdCBzaWduaW5nSW5wdXQgPSB0b2tlblBhcnRzWzBdICsgJy4nICsgdG9rZW5QYXJ0c1sxXTtcbiAgICAgICAgY29uc3QgcGVyZm9ybVZlcmlmeSA9IChzaWduaW5nSW5wdXRIYXNoKSA9PiB7XG4gICAgICAgICAgICAvLyBleHRyYWN0IHRoZSBzaWduYXR1cmUgYXMgYSBERVIgYXJyYXlcbiAgICAgICAgICAgIGNvbnN0IGRlclNpZ25hdHVyZUJ5dGVzID0gdGhpcy5jcnlwdG9DbGllbnQubG9hZFNpZ25hdHVyZSh0b2tlblBhcnRzWzJdKTtcbiAgICAgICAgICAgIC8vIHZlcmlmeSB0aGUgc2lnbmVkIGhhc2hcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNyeXB0b0NsaWVudC52ZXJpZnlIYXNoKHNpZ25pbmdJbnB1dEhhc2gsIGRlclNpZ25hdHVyZUJ5dGVzLCB0aGlzLnJhd1B1YmxpY0tleSk7XG4gICAgICAgIH07XG4gICAgICAgIGlmIChhc3luYykge1xuICAgICAgICAgICAgcmV0dXJuICgwLCBzaGEyNTZfMS5oYXNoU2hhMjU2QXN5bmMpKHNpZ25pbmdJbnB1dCkudGhlbihzaWduaW5nSW5wdXRIYXNoID0+IHBlcmZvcm1WZXJpZnkoc2lnbmluZ0lucHV0SGFzaCkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3Qgc2lnbmluZ0lucHV0SGFzaCA9ICgwLCBzaGEyNTZfMS5oYXNoU2hhMjU2KShzaWduaW5nSW5wdXQpO1xuICAgICAgICAgICAgcmV0dXJuIHBlcmZvcm1WZXJpZnkoc2lnbmluZ0lucHV0SGFzaCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdmVyaWZ5RXhwYW5kZWQodG9rZW4sIGFzeW5jKSB7XG4gICAgICAgIGNvbnN0IHNpZ25pbmdJbnB1dCA9IFt0b2tlblsnaGVhZGVyJ10uam9pbignLicpLCBiYXNlNjR1cmwuZW5jb2RlKHRva2VuWydwYXlsb2FkJ10pXS5qb2luKCcuJyk7XG4gICAgICAgIGxldCB2ZXJpZmllZCA9IHRydWU7XG4gICAgICAgIGNvbnN0IHBlcmZvcm1WZXJpZnkgPSAoc2lnbmluZ0lucHV0SGFzaCkgPT4ge1xuICAgICAgICAgICAgdG9rZW5bJ3NpZ25hdHVyZSddLm1hcCgoc2lnbmF0dXJlKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgZGVyU2lnbmF0dXJlQnl0ZXMgPSB0aGlzLmNyeXB0b0NsaWVudC5sb2FkU2lnbmF0dXJlKHNpZ25hdHVyZSk7XG4gICAgICAgICAgICAgICAgY29uc3Qgc2lnbmF0dXJlVmVyaWZpZWQgPSB0aGlzLmNyeXB0b0NsaWVudC52ZXJpZnlIYXNoKHNpZ25pbmdJbnB1dEhhc2gsIGRlclNpZ25hdHVyZUJ5dGVzLCB0aGlzLnJhd1B1YmxpY0tleSk7XG4gICAgICAgICAgICAgICAgaWYgKCFzaWduYXR1cmVWZXJpZmllZCkge1xuICAgICAgICAgICAgICAgICAgICB2ZXJpZmllZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHZlcmlmaWVkO1xuICAgICAgICB9O1xuICAgICAgICBpZiAoYXN5bmMpIHtcbiAgICAgICAgICAgIHJldHVybiAoMCwgc2hhMjU2XzEuaGFzaFNoYTI1NkFzeW5jKShzaWduaW5nSW5wdXQpLnRoZW4oc2lnbmluZ0lucHV0SGFzaCA9PiBwZXJmb3JtVmVyaWZ5KHNpZ25pbmdJbnB1dEhhc2gpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IHNpZ25pbmdJbnB1dEhhc2ggPSAoMCwgc2hhMjU2XzEuaGFzaFNoYTI1Nikoc2lnbmluZ0lucHV0KTtcbiAgICAgICAgICAgIHJldHVybiBwZXJmb3JtVmVyaWZ5KHNpZ25pbmdJbnB1dEhhc2gpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5Ub2tlblZlcmlmaWVyID0gVG9rZW5WZXJpZmllcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcmlmaWVyLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsontokens/lib/verifier.js\n");

/***/ })

};
;